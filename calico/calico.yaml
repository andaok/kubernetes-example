# Calico Version v2.6.1
# https://docs.projectcalico.org/v2.6/releases#v2.6.1
# This manifest includes the following component versions:
#   calico/node:v2.6.1
#   calico/cni:v1.11.0
#   calico/kube-controllers:v1.0.0

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://172.29.151.1:2379,https://172.29.151.2:2379,https://172.29.151.3:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
        "name": "k8s-pod-network",
        "cniVersion": "0.1.0",
        "type": "calico",
        "etcd_endpoints": "__ETCD_ENDPOINTS__",
        "etcd_key_file": "__ETCD_KEY_FILE__",
        "etcd_cert_file": "__ETCD_CERT_FILE__",
        "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
        "log_level": "info",
        "mtu": 1500,
        "ipam": {
            "type": "calico-ipam"
        },
        "policy": {
            "type": "k8s",
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "kubeconfig": "__KUBECONFIG_FILEPATH__"
        }
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"

---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNmxPY3ZhVzBTWFNIMVRoUWZxWnN3M0lWbWRQQzZTQWpwaVJPQ3pjYzkxMHNoajBDCnZYL1VyY0FZNzVZcjdRVllLTWFpT1ZuSWtiT0VDQlRNamxoOE9VNE1wMlZJNzluRzFnSlhjYjdXSG1LV3BMY0gKdGxtdTN4a2wzcnlzWjIyZnlFRnVTL2Zrc2VqOHV2QTg1NUhGU2hhYnRWaWhIelUvMFB0UWUvdTByN2x3RmRoQgplY3FqeTFDcmhjd0ZNT1VmVlFqVUVtVW5EK2grZGpPcjI4MnVNUVMyaGNKVmhOZ2JFMjJLMjkxUjhPTDFTbWhYCmFMSktZclpkRGVmTHluQ2Y4WjQzWEhzODNqQVNxSUZnTGdPWmZuYnBXSlVMZ0NOZWtPMmNyZitvZm9LekYwaHIKZWVGNGxKMlQrdFkxalNpSGJ1elJvVHZyOVdEdDRyTExWeEVwc1FJREFRQUJBb0lCQUE2SXl5TVVRUitCUTkrYwowNWxYZDAyVUtQVFdwck5SRkFUOUlYNGVtQVJiMmlRbGFxTVlaN2V6UDVpMHh0cTN4eVVZVlAyYnJRNGtoVjcrCjgwVXRCZCtFRU5MZFBHM3NJeUlwR1FWc0lkbldvYU5yMnVXYm9IWWtHQzQ5bzYveW84T0hFM0ZRMmZXVER3SUYKWHJHNlgvTmRmYUQ4ODFsOU13MGlXWGFuUVNqWkNGRVZpQ1d5d1ZjRE1XczNiYjBYTkJDNEk2MFNwNlYrc1lUUgpoVmxCeHI2L3g2WHVWbzhkNnZPbk9nNXUyVWRQMHdRaHozcFBaWkU0djIzVFM4NXJoaWdJdU5PNmQvSUFiQytWCnVFVFhPcis2YkkvbzE2QXlKWklSUVdmK0VhRldDZlI5ZTdERlRXZlk4aEZUMHV3OWRzNUFMYU95eWloQWpWQ2gKd3ZVT1N1VUNnWUVBOTRkZHk2MTZOREdxUnA5VzlQcnhtUGU2UzRaQmtDd0cxa0JXejk3SEsxdkJmNkxyaklGMwpGdHQ0UTJZVDRIM0k5WVU1RGRpdFN2VWpqUVFuK1o4Yy8rQzFPL09PM0gxckRBQTRtdklQMG5LTUcxQmxBNUNmCmYyVlFCblhmc1BwUVZISlR3bllmMSsrcEhhNjc5Nmg3WDE4dE1sclg1dDJ1S1UrRUFvQnpRbzhDZ1lFQThsaVUKZEhZSzJDZnhqNkswTzFFcEs4OFh1QVMzNnNQK2I4QklhYk1sWHBhaGR5UDFMQXY2QzUwbWUyL3ZvQXJPUjlGNQo0Rkl2TXlmbXlGR2ZlV1BiM3RHUU1acTRJRjA0UXV6dlNqU2RscDdFajBsSHJTOFNwNHhyN204UzFCa1lKekVOCkZYSEc2QXpvUC82RnFnVWw0VHNUMUM3Zmx0RmZLWVBQeDFhaDc3OENnWUIxWVNYamZrSmpHZUlyVjBnL0ova0YKbHdRcTZHR1M0cTNqVCtOYTg4UHpGYkh1dXUyRVZhaUptRTJ4ZUdpWW5rMTcwRTg3OTdKRngzV3lXM1F4ZFhpbApCb1FyQjlhSlRKaEV1cDRkTEFqQXZUMGZmc0pJTEg3V1JNN3NJVjJRYVVOS3FHUjc1TlE0N0JlQVVlb2xDU3BvCkVaUTNPc2tEVzhCSktzSHBCY3lpbFFLQmdGQTNxK1FrMHBBY0lLUlh5ZXE4Z2JGRG1tbEovb3JTRjExc08wdnAKaFp3YXBoV21yRmZKR3hwUENWYmdoV1BuVDhLTC94aVdlNU1tU1FqVG84THRuL0RRVXpkb0xEeGlQdVpBUVREQgoyOHZvZjgyaUJ2eTNVU2h1bmFkTjB1Q3I4Y2UvUDhKeVo5R1Z2Q2E2bkFuY0xGNnlUR3oybXdIMENkalhEYWJBCjhWZEhBb0dCQUwvcGl0UVltWEVLQm9sTWtCMDFweTYrRVRkUHdGaUpxZG1aMEdSOWlsTnJ3Q0dFQ1ZoVi82OUoKdDhKNXlTb1ZPSTA1cytOUVFYME9qTk5jbGNXd0sxVXRHbHQrdnNvMnBObTBSS2FCSjltSkkvRFpSM2lFVUlkeApVaytSM3M3azAzSzQ5N1BTS2JCMkN5bmNKU01aTmNTNjB0WVJYeUdOMnU3alRxWnBHQXBBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3akNDQXRhZ0F3SUJBZ0lVT2FiWkNmNE1sdlJUOUVBWVkwdG5jMHZmTEprd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1lURUxNQWtHQTFVRUJoTUNRMDR4RGpBTUJnTlZCQWdUQlZkMWFHRnVNUTR3REFZRFZRUUhFd1ZJZFdKbAphVEVNTUFvR0ExVUVDaE1EYXpoek1ROHdEUVlEVlFRTEV3WlRlWE4wWlcweEV6QVJCZ05WQkFNVENtdDFZbVZ5CmJtVjBaWE13SGhjTk1UY3hNREV4TVRFd05qQXdXaGNOTWpjeE1EQTVNVEV3TmpBd1dqQmJNUXN3Q1FZRFZRUUcKRXdKRFRqRU9NQXdHQTFVRUNCTUZWM1ZvWVc0eERqQU1CZ05WQkFjVEJVaDFZbVZwTVF3d0NnWURWUVFLRXdOcgpPSE14RHpBTkJnTlZCQXNUQmxONWMzUmxiVEVOTUFzR0ExVUVBeE1FWlhSalpEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPcFRuTDJsdEVsMGg5VTRVSDZtYk1OeUZablR3dWtnSTZZa1RnczMKSFBkZExJWTlBcjEvMUszQUdPK1dLKzBGV0NqR29qbFp5Skd6aEFnVXpJNVlmRGxPREtkbFNPL1p4dFlDVjNHKwoxaDVpbHFTM0I3WlpydDhaSmQ2OHJHZHRuOGhCYmt2MzVMSG8vTHJ3UE9lUnhVb1dtN1ZZb1I4MVA5RDdVSHY3CnRLKzVjQlhZUVhuS284dFFxNFhNQlREbEgxVUkxQkpsSncvb2ZuWXpxOXZOcmpFRXRvWENWWVRZR3hOdGl0dmQKVWZEaTlVcG9WMml5U21LMlhRM255OHB3bi9HZU4xeDdQTjR3RXFpQllDNERtWDUyNlZpVkM0QWpYcER0bkszLwpxSDZDc3hkSWEzbmhlSlNkay9yV05ZMG9oMjdzMGFFNzYvVmc3ZUt5eTFjUktiRUNBd0VBQWFPQm96Q0JvREFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZLRkNEM2tuVjhURGFTNWtsU1dHNnJHV3UxWmhNQjhHQTFVZApJd1FZTUJhQUZFRnN4NmJFK3dQT2pzVktnWHNyNUdUeXBMcy9NQ0VHQTFVZEVRUWFNQmlIQkg4QUFBR0hCS3dkCmx3R0hCS3dkbHdLSEJLd2Rsd013RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUIydlBSMitCTVFWeWFiWFBJUGUKd0VlUXNHb21EdEQvVWZSLzB1NkNQWXk5TDJlZll4VnZpY0ltS29uS0FrZ0VBblpwOW1UZGNXYnVrdFEvSjM3RwpETGw1dWlQVjY5ZUdVZXpRS0huRDNGbzlNR1NIZk1ML2trRlU5OFRnQXNFbDZSeXZBZTRpaVhTNlE5MnJzRGxXCmxVRjdjOEQvT0s5enc1QjF1M0doTlllR2paeG0vSnVieHp5MU41NmtKT2tza25RR1FremhKaWlXZS9jVm81SzgKMi9LNU9jNmt0dWtWMDd0V1dreFBQTFVVbDBtZlQxV2tkaURhRWFlcGM3OTl4UXpRdkJHSitubWRlaks4UWZWRApQaGFiZnRQQkR4dmNRWlo5WHhJU0tUMXg1ZmxOY2VTMUdYQUlPVUUxREx3cW4zenIvYmFKdysyaTJKZHMyK3ZOCk1qMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0akNDQXA2Z0F3SUJBZ0lVWDhTZ1pBblBMajN2ektxcFhBVHlMdlRRdi84d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1lURUxNQWtHQTFVRUJoTUNRMDR4RGpBTUJnTlZCQWdUQlZkMWFHRnVNUTR3REFZRFZRUUhFd1ZJZFdKbAphVEVNTUFvR0ExVUVDaE1EYXpoek1ROHdEUVlEVlFRTEV3WlRlWE4wWlcweEV6QVJCZ05WQkFNVENtdDFZbVZ5CmJtVjBaWE13SGhjTk1UY3hNREV4TVRFd05qQXdXaGNOTWpJeE1ERXdNVEV3TmpBd1dqQmhNUXN3Q1FZRFZRUUcKRXdKRFRqRU9NQXdHQTFVRUNCTUZWM1ZvWVc0eERqQU1CZ05WQkFjVEJVaDFZbVZwTVF3d0NnWURWUVFLRXdOcgpPSE14RHpBTkJnTlZCQXNUQmxONWMzUmxiVEVUTUJFR0ExVUVBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQVBNeXpNRlkrdE1wa0gxZmgvN2FBd2xUeEprWldGODAKREpZd0FIVHV3RVZYOFVQQVZNaUowVHVFVVQ0ekFMbU52SUFYdFd2MWxCYmxHcDYweE41T0xvckFFd1YvRVd5eQp3TGkzOGRDWDFoQlZMQ1YxWmVKd3NQVk0zRGdEa2x1UGVOQjkyaDAzSkpSdnFLMHo5RG10S0ROZEIvRDZwQTJnCkdsT2JSUGRLWHFXMXMwVmIrNGZIZDNhZ1FuOXFXbVp1UXM2Vi9TOWNvRFFPZkZZL1VDMzRjZ1FRM3M3aXVWY2QKVmhQUXBtWko0MFAzMGs0bWVuMUs3Yk9jSFJkcmUvcHNtMUx0czBVcm01dEgyM3psd0tHTDU2WmpmS0lYb2pvagpEM0RGbEJVV3N5dml2WDhEVUpDYXZycWtWQ3BtSnNkekFTME9XL2R3UUt0MFJQM01mY1JOK0xFQ0F3RUFBYU5tCk1HUXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CSUdBMVVkRXdFQi93UUlNQVlCQWY4Q0FRSXdIUVlEVlIwT0JCWUUKRkVGc3g2YkUrd1BPanNWS2dYc3I1R1R5cExzL01COEdBMVVkSXdRWU1CYUFGRUZzeDZiRSt3UE9qc1ZLZ1hzcgo1R1R5cExzL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZmN2ZWb1p0Zm00a3ZxWkhpZTNBRXJVUHZHMmpsCkZvY08va3NQQk93VnBaV01GMGczUzhBbHVoWXZFZ3JlUW9ZQS9JS1V5T1oyMmxwVFdOVFJNUkJlVkFXNlhzN0wKaEJ4bFh5TWVwVGtlcUxXZWp1UnB6Ty9IR1JNSUc5N2Z0dFdadThpbk9uQ0xNbFJZdUd1TGlCZElBL2doSDlUQQo3dE5tbFZGTER1a3g4dFArS3FWZWdnR05uTEFpYk93Z2EvSUNOTnRDaTliWFQ1c2FEY3d2WlBRT01Nc1c5bmh4Cnk0bW0rTnFmcXVoSWd4N1RySGV4UmFtQnk3TVdHcW1wNmtzZXBucUpQdzdIUjd4NWZncTFDMTVuVGM0bExyTkcKU1dxSjRCeFQ2RjRnUFovTThTZDQ3dDcrL1VHZmtJTVl0bGhPSkQvRkpNS2M4QTM5Z3A2dU9wTjcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
#        - name: calico-node
#          image: quay.io/calico/node:v2.6.1
#          env:
#            # The location of the Calico etcd cluster.
#            - name: ETCD_ENDPOINTS
#              valueFrom:
#                configMapKeyRef:
#                  name: calico-config
#                  key: etcd_endpoints
#            # Choose the backend to use.
#            - name: CALICO_NETWORKING_BACKEND
#              valueFrom:
#                configMapKeyRef:
#                  name: calico-config
#                  key: calico_backend
#            # Cluster type to identify the deployment type
#            - name: CLUSTER_TYPE
#              value: "k8s,bgp"
#            # Disable file logging so `kubectl logs` works.
#            - name: CALICO_DISABLE_FILE_LOGGING
#              value: "true"
#            # Set Felix endpoint to host default action to ACCEPT.
#            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
#              value: "ACCEPT"
#            # Configure the IP Pool from which Pod IPs will be chosen.
#            - name: CALICO_IPV4POOL_CIDR
#              value: "192.168.0.0/16"
#            - name: CALICO_IPV4POOL_IPIP
#              value: "always"
#            # Disable IPv6 on Kubernetes.
#            - name: FELIX_IPV6SUPPORT
#              value: "false"
#            # Set Felix logging to "info"
#            - name: FELIX_LOGSEVERITYSCREEN
#              value: "info"
#            # Set MTU for tunnel device used if ipip is enabled
#            - name: FELIX_IPINIPMTU
#              value: "1440"
#            # Location of the CA certificate for etcd.
#            - name: ETCD_CA_CERT_FILE
#              valueFrom:
#                configMapKeyRef:
#                  name: calico-config
#                  key: etcd_ca
#            # Location of the client key for etcd.
#            - name: ETCD_KEY_FILE
#              valueFrom:
#                configMapKeyRef:
#                  name: calico-config
#                  key: etcd_key
#            # Location of the client certificate for etcd.
#            - name: ETCD_CERT_FILE
#              valueFrom:
#                configMapKeyRef:
#                  name: calico-config
#                  key: etcd_cert
#            # Auto-detect the BGP IP address.
#            - name: IP
#              value: ""
#            - name: FELIX_HEALTHENABLED
#              value: "true"
#          securityContext:
#            privileged: true
#          resources:
#            requests:
#              cpu: 250m
#          livenessProbe:
#            httpGet:
#              path: /liveness
#              port: 9099
#            periodSeconds: 10
#            initialDelaySeconds: 10
#            failureThreshold: 6
#          readinessProbe:
#            httpGet:
#              path: /readiness
#              port: 9099
#            periodSeconds: 10
#          volumeMounts:
#            - mountPath: /lib/modules
#              name: lib-modules
#              readOnly: true
#            - mountPath: /var/run/calico
#              name: var-run-calico
#              readOnly: false
#            - mountPath: /calico-secrets
#              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v1.11.0
          command: ["/install-cni.sh"]
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: quay.io/calico/kube-controllers:v1.0.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This deployment turns off the old "policy-controller". It should remain at 0 replicas, and then
# be removed entirely once the new kube-controllers deployment has been deployed above.
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-policy-controller
  namespace: kube-system
  labels:
    k8s-app: calico-policy
spec:
  # Turn this deployment off in favor of the kube-controllers deployment above.
  replicas: 0
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-policy-controller
      namespace: kube-system
      labels:
        k8s-app: calico-policy
    spec:
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-policy-controller
          image: quay.io/calico/kube-controllers:v1.0.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
